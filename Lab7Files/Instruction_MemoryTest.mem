23bdfffc	//	main:			addi	$sp, $sp, -4 ->	main:			addi	$sp, $sp, -4
afbf0000	//				sw	$ra, 0($sp) ->				sw	$ra, 0($sp)
34040000	//				ori	$a0, $zero, 0 ->				ori	$a0, $zero, 0
34050010	//				ori	$a1, $zero, 16 ->				ori	$a1, $zero, 16
34060050	//				ori	$a2, $zero, 80 ->				ori	$a2, $zero, 80
0c000009	//				jal	vbsme ->				jal	vbsme
8fbf0000	//				lw	$ra, 0($sp) ->				lw	$ra, 0($sp)
23bd0004	//				addi	$sp, $sp, 4 ->				addi	$sp, $sp, 4
03e00008	//				jr	$ra ->				jr	$ra
34020000	//	vbsme:			ori	$v0, $zero, 0 ->	vbsme:			ori	$v0, $zero, 0
34030000	//				ori	$v1, $zero, 0 ->				ori	$v1, $zero, 0
23bdfffc	//				addi	$sp, $sp, -4 ->				addi	$sp, $sp, -4
afbf0000	//				sw	$ra, 0($sp) ->				sw	$ra, 0($sp)
8c900000	//				lw	$s0, 0($a0) ->				lw	$s0, 0($a0)
8c910004	//				lw	$s1, 4($a0) ->				lw	$s1, 4($a0)
8c920008	//				lw	$s2, 8($a0) ->				lw	$s2, 8($a0)
8c93000c	//				lw	$s3, 12($a0) ->				lw	$s3, 12($a0)
0233a022	//				sub	$s4, $s1, $s3 ->				sub	$s4, $s1, $s3
0212a822	//				sub	$s5, $s0, $s2 ->				sub	$s5, $s0, $s2
341e270f	//				ori	$30, $zero, 9999 ->				ori	$30, $zero, 9999
34080000	//				ori	$t0, $zero, 0 ->				ori	$t0, $zero, 0
34090000	//				ori	$t1, $zero, 0 ->				ori	$t1, $zero, 0
34160000	//				ori	$s6, $zero, 0 ->				ori	$s6, $zero, 0
34170000	//				ori	$s7, $zero, 0 ->				ori	$s7, $zero, 0
0296c82a	//	Traversal_Loop:		slt	$t9, $s4, $s6 ->	Traversal_Loop:		slt	$t9, $s4, $s6
1720002c	//				bne	$t9, $zero, End_Traversal ->				bne	$t9, $zero, End_Traversal
02b7c82a	//				slt	$t9, $s5, $s7 ->				slt	$t9, $s5, $s7
1720002a	//				bne	$t9, $zero, End_Traversal ->				bne	$t9, $zero, End_Traversal
0c00003e	//				jal	Compute_SAD_CallR ->				jal	Compute_SAD_CallR
0289c82a	//	Move_Right_Loop:	slt	$t9, $s4, $t1 ->	Move_Right_Loop:	slt	$t9, $s4, $t1
17200004	//				bne	$t9, $zero, Update_TopBoundary ->				bne	$t9, $zero, Update_TopBoundary
21290001	//				addi	$t1, $t1, 1 ->				addi	$t1, $t1, 1
0289c82a	//				slt	$t9, $s4, $t1 ->				slt	$t9, $s4, $t1
1320001c	//				beq	$t9, $zero, Compute_SAD_CallR ->				beq	$t9, $zero, Compute_SAD_CallR
0800001d	//	Right:			j	Move_Right_Loop ->	Right:			j	Move_Right_Loop
22f70001	//	Update_TopBoundary:	addi	$s7, $s7, 1 ->	Update_TopBoundary:	addi	$s7, $s7, 1
2129ffff	//				addi	$t1, $t1, -1 ->				addi	$t1, $t1, -1
02a8c82a	//	Move_Down_Loop:		slt	$t9, $s5, $t0 ->	Move_Down_Loop:		slt	$t9, $s5, $t0
17200004	//				bne	$t9, $zero, Update_RightBoundary ->				bne	$t9, $zero, Update_RightBoundary
21080001	//				addi	$t0, $t0, 1 ->				addi	$t0, $t0, 1
02a8c82a	//				slt	$t9, $s5, $t0 ->				slt	$t9, $s5, $t0
13200016	//				beq	$t9, $zero, Compute_SAD_CallD ->				beq	$t9, $zero, Compute_SAD_CallD
08000025	//	Down:			j	Move_Down_Loop ->	Down:			j	Move_Down_Loop
2294ffff	//	Update_RightBoundary:	addi	$s4, $s4, -1 ->	Update_RightBoundary:	addi	$s4, $s4, -1
2108ffff	//				addi	$t0, $t0, -1 ->				addi	$t0, $t0, -1
0136c82a	//	Move_Left_Loop:		slt	$t9, $t1, $s6 ->	Move_Left_Loop:		slt	$t9, $t1, $s6
17200004	//				bne	$t9, $zero, Update_BottomBoundary ->				bne	$t9, $zero, Update_BottomBoundary
2129ffff	//				addi	$t1, $t1, -1 ->				addi	$t1, $t1, -1
0136c82a	//				slt	$t9, $t1, $s6 ->				slt	$t9, $t1, $s6
13200010	//				beq	$t9, $zero, Compute_SAD_CallL ->				beq	$t9, $zero, Compute_SAD_CallL
0800002d	//	Left:			j	Move_Left_Loop ->	Left:			j	Move_Left_Loop
22b5ffff	//	Update_BottomBoundary:	addi	$s5, $s5, -1 ->	Update_BottomBoundary:	addi	$s5, $s5, -1
21290001	//				addi	$t1, $t1, 1 ->				addi	$t1, $t1, 1
0117c82a	//	Move_Up_Loop:		slt	$t9, $t0, $s7 ->	Move_Up_Loop:		slt	$t9, $t0, $s7
17200004	//				bne	$t9, $zero, Update_LeftBoundary ->				bne	$t9, $zero, Update_LeftBoundary
2108ffff	//				addi	$t0, $t0, -1 ->				addi	$t0, $t0, -1
0117c82a	//				slt	$t9, $t0, $s7 ->				slt	$t9, $t0, $s7
1320000a	//				beq	$t9, $zero, Compute_SAD_CallU ->				beq	$t9, $zero, Compute_SAD_CallU
08000035	//	Up:			j	Move_Up_Loop ->	Up:			j	Move_Up_Loop
22d60001	//	Update_LeftBoundary:	addi	$s6, $s6, 1 ->	Update_LeftBoundary:	addi	$s6, $s6, 1
21080001	//				addi	$t0, $t0, 1 ->				addi	$t0, $t0, 1
08000018	//				j	Traversal_Loop ->				j	Traversal_Loop
0c000049	//	Compute_SAD_CallR:	jal	Compute_SAD ->	Compute_SAD_CallR:	jal	Compute_SAD
08000022	//				j	Right ->				j	Right
0c000049	//	Compute_SAD_CallD:	jal	Compute_SAD ->	Compute_SAD_CallD:	jal	Compute_SAD
0800002a	//				j	Down ->				j	Down
0c000049	//	Compute_SAD_CallL:	jal	Compute_SAD ->	Compute_SAD_CallL:	jal	Compute_SAD
08000032	//				j	Left ->				j	Left
0c000049	//	Compute_SAD_CallU:	jal	Compute_SAD ->	Compute_SAD_CallU:	jal	Compute_SAD
0800003a	//				j	Up ->				j	Up
8fbf0000	//	End_Traversal:		lw	$ra, 0($sp) ->	End_Traversal:		lw	$ra, 0($sp)
23bd0004	//				addi	$sp, $sp, 4 ->				addi	$sp, $sp, 4
03e00008	//				jr	$ra ->				jr	$ra
0000c020	//	Compute_SAD:		add	$t8, $zero, $zero ->	Compute_SAD:		add	$t8, $zero, $zero
71117002	//				mul	$t6, $t0, $s1 ->				mul	$t6, $t0, $s1
01c97020	//				add	$t6, $t6, $t1 ->				add	$t6, $t6, $t1
000e7080	//				sll	$t6, $t6, 2 ->				sll	$t6, $t6, 2
00ae5020	//				add	$t2, $a1, $t6 ->				add	$t2, $a1, $t6
00c05820	//				add	$t3, $a2, $zero ->				add	$t3, $a2, $zero
00006020	//				add	$t4, $zero, $zero ->				add	$t4, $zero, $zero
0192c82a	//	Compute_SAD_Row_Loop:	slt	$t9, $t4, $s2 ->	Compute_SAD_Row_Loop:	slt	$t9, $t4, $s2
13200013	//				beq	$t9, $zero, Compute_SAD_Done ->				beq	$t9, $zero, Compute_SAD_Done
00006820	//				add	$t5, $zero, $zero ->				add	$t5, $zero, $zero
01b3c82a	//	Compute_SAD_Col_Loop:	slt	$t9, $t5, $s3 ->	Compute_SAD_Col_Loop:	slt	$t9, $t5, $s3
1320000a	//				beq	$t9, $zero, Next_Row ->				beq	$t9, $zero, Next_Row
8d4e0000	//				lw	$t6, 0($t2) ->				lw	$t6, 0($t2)
8d6f0000	//				lw	$t7, 0($t3) ->				lw	$t7, 0($t3)
01cf7022	//				sub	$t6, $t6, $t7 ->				sub	$t6, $t6, $t7
05c10001	//				bgez	$t6, Add_To_Sum ->				bgez	$t6, Add_To_Sum
000e7022	//				sub	$t6, $zero, $t6 ->				sub	$t6, $zero, $t6
030ec020	//	Add_To_Sum:		add	$t8, $t8, $t6 ->	Add_To_Sum:		add	$t8, $t8, $t6
214a0004	//				addi	$t2, $t2, 4 ->				addi	$t2, $t2, 4
216b0004	//				addi	$t3, $t3, 4 ->				addi	$t3, $t3, 4
21ad0001	//				addi	$t5, $t5, 1 ->				addi	$t5, $t5, 1
08000053	//				j	Compute_SAD_Col_Loop ->				j	Compute_SAD_Col_Loop
00117080	//	Next_Row:		sll	$t6, $s1, 2 ->	Next_Row:		sll	$t6, $s1, 2
00137880	//				sll	$t7, $s3, 2 ->				sll	$t7, $s3, 2
01cf7022	//				sub	$t6, $t6, $t7 ->				sub	$t6, $t6, $t7
014e5020	//				add	$t2, $t2, $t6 ->				add	$t2, $t2, $t6
218c0001	//				addi	$t4, $t4, 1 ->				addi	$t4, $t4, 1
08000050	//				j	Compute_SAD_Row_Loop ->				j	Compute_SAD_Row_Loop
031ec82a	//	Compute_SAD_Done:	slt	$t9, $t8, $30 ->	Compute_SAD_Done:	slt	$t9, $t8, $30
17200001	//				bne	$t9, $zero, Update_Min_Sad ->				bne	$t9, $zero, Update_Min_Sad
03e00008	//				jr	$ra ->				jr	$ra
0300f020	//	Update_Min_Sad:		add	$30, $t8, $zero ->	Update_Min_Sad:		add	$30, $t8, $zero
01001020	//				add	$v0, $t0, $zero ->				add	$v0, $t0, $zero
01201820	//				add	$v1, $t1, $zero ->				add	$v1, $t1, $zero
03e00008	//				jr	$ra ->				jr	$ra
